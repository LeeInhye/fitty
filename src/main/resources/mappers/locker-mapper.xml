<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="lockerMapper">
	
	<resultMap id="LockerResult" type="Locker">
		<result column="lk_no" property="lkNo" />
		<result column="lk_enroll_date" property="lkEnrollDate" />
		<result column="lk_block" property="lkBlock"/>
		<result column="user_no" property="userNo"/>
		<result column="user_name" property="userName"/>
		<result column="assign_date" property="assignDate"/>
		<result column="start_date" property="startDate"/>
		<result column="end_Date" property="endDate"/>
		<result column="to_start_date" property="toStartDate"/>
		<result column="to_end_date" property="toEndDate"/>
	</resultMap>
	
	<resultMap id="UserResult" type="User">
		<result column="user_no" property="userNo" />
		<result column="user_name" property="userName" />
	</resultMap>
	
	<select id="selectListCount" resultType="_int">
		select
				count(*)
		   from tb_locker
	</select>
	
	<select id="selectList" resultMap="LockerResult">
		select
				lk_no
			  , lk_block
			  , user_no
              , user_name
			  , assign_date
			  , start_date
			  , end_date
              , trunc(to_date(start_date, 'yy/MM/dd') - sysdate) "to_start_date"
              , trunc(to_date(end_date, 'yy/MM/dd') - sysdate) "to_end_date"
		   from tb_locker
           join tb_lk_asn using (lk_no)
           left join tb_user using (user_no)
          order
             by lk_no
	</select>
	
	<insert id="addLocker">
		insert
		  into tb_locker
		  	    (
		  	   	  lk_no
		  	    , lk_enroll_date
		  	    )
		 	    values
		 	    (
		 	      seq_lk_no.nextval
		 	    , sysdate
		 	    )
		 	    
	</insert>
	
	<delete id="deleteLocker">
		delete
		  from tb_locker
		 where lk_no = #{lkNo}
	</delete>
	
	<select id="selectUserList" resultMap="UserResult">
		select
				distinct
                user_no
              , user_name
		   from tb_user
           left join tb_lk_asn using(user_no)
		  where user_status = 'Y'
		  order
		     by user_name
	</select>
	
	<select id="selectUserList2" resultMap="UserResult">
		select
                user_no
              , user_name
		   from tb_user
           left join tb_lk_asn using(user_no)
		  where user_status = 'Y'
		    and start_date is not null
		    and end_date > sysdate
		  order
		     by user_name
	</select>
	
	<select id="selectUsedLkNo" resultMap="LockerResult">
		select lk_no
		  from tb_lk_asn
		 where start_date is not null
		 order
		    by lk_no
	</select>
	
	<select id="selectNotUsedLkNo" resultMap="LockerResult">
		select lk_no
		  from tb_lk_asn
		 where start_date is null
		 order
		    by lk_no
	</select>
	
	<update id="assignLocker">
		update
				 tb_lk_asn
		    set user_no = #{userNo}
		    	, assign_date = sysdate
		    	, start_date = #{startDate}
		    	, end_date = #{endDate}
		  where lk_no = #{lkNo}
	</update>
	
	<select id="selectConditionLkNo" resultMap="LockerResult">
		select
		        lk_no
		   from tb_lk_asn
		   where user_no = #{userNo}
		     and end_date >= to_date(sysdate)
	</select>
	
	<select id="selectLockerInfo" resultMap="LockerResult">
		select 
				lk_no
			  , user_no
			  , assign_date
			  , start_date
			  , end_date
  		   from tb_lk_asn
 		  where lk_no = #{lkNo}
	</select>
	
	<update id="moveLocker">
		update
				tb_lk_asn
		    set user_no = #{userNo}
		      , assign_date = #{assignDate}
		      , start_date = #{startDate}
		      , end_date = #{endDate}
		  where lk_no = #{mvLkNo}
		  
	</update>
	
	<update id="recoverLocker">
		update
				tb_lk_asn
		    set user_no = null
		      , assign_date = null
		      , start_date = null
		      , end_date = null
		  where lk_no = #{lkNo}
	</update>
	
	<update id="updateLockerBroken">
		update 
				tb_locker
		    set lk_block = '2'
		  where lk_no = #{lkNo}
	</update>
	
	<update id="repairLocker">
		update 
				tb_locker
		    set lk_block = '1'
		  where lk_no = #{lkNo}
	</update>
	
</mapper>
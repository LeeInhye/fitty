<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="employeeMapper">

<resultMap id="employeeResult" type="Employee">
		<result column="emp_no" property="empNo"/>
		<result column="emp_name" property="empName"/>
		<result column="emp_grade" property="empGrade"/>
		<result column="emp_gender" property="empGender"/>
		<result column="emp_mail" property="empMail"/>
		<result column="emp_phone" property="empPhone"/>
		<result column="emp_birth" property="empBirth"/>
		<result column="emp_photo" property="empPhoto"/>
		<result column="emp_enroll_date" property="empEnrollDate"/>
		<result column="emp_modify_date" property="empModifyDate"/>
		<result column="attIn" property="attOut"/>
		<result column="attOut" property="attOut"/>
		<result column="gr_name" property = "grName"/>
</resultMap>

	<select id="loginEmployee" resultMap="employeeResult">
		select distinct e.emp_no
			   , e.emp_name
			   , e.emp_grade
			   , e.emp_gender
			   , e.emp_mail
			   , e.emp_phone
			   , e.emp_birth
			   , e.emp_status
			   , e.emp_photo
			   , e.emp_enroll_date
			   , e.emp_modify_date
               , a.att_date
			   , nvl(a.att_in, 0)
			   , nvl(a.att_out, 0)
			   , g.gr_name
			   <!-- , c.cl_no -->
		  from   tb_emp e
		  join   tb_att a on (a.emp_no = e.emp_no)
		  join   tb_grade g on (e.emp_grade = g.emp_grade)
		 where   e.emp_no = #{empNo}
		   and  e.emp_status = 'Y'
           and  a.att_date = to_char(sysdate, 'yyyy-mm-dd')
	</select>
	
	
	
	<select id="selectNextEmpNo" resultType="string">
		select last_number
		  from user_sequences
		 where sequence_name = 'SEQ_EMP_NO'
		<!-- SELECT LAST_NUMBER FROM USER_SEQUENCES WHERE SEQUENCE_NAME = 'SEQ_EMP_NO' -->
	</select>
	
	<insert id="insertEmployee">
		insert into tb_emp
		    (
		     emp_no
		   , emp_name
		   , emp_grade
		   , emp_gender
		   , emp_mail
		   , emp_phone
		   , emp_birth
		   , emp_status
		   , emp_photo
		   , emp_enroll_date
		   , emp_modify_date
		    )
		values
		    ( #{gradeString} || seq_emp_no.nextval
		   , #{empName}
		   , #{empGrade}
		   , #{empGender}
		   , lower(#{gradeString})|| seq_emp_no.CURRVAL || '@fitty.com'
		   , #{empPhone}
		   , #{empBirth}
		   , 'Y'
		   , #{empPhoto}
		   , sysdate
		   , sysdate
		     )
	</insert>
	
	<select id="selectEmpList" resultMap="employeeResult">
		select emp_no
			 , emp_name
			 , emp_grade
		  from tb_emp
		where emp_status = 'Y'
	</select>
	
	  <select id="selectEmpListCount" resultType="_int">
	  	select count(*)
	  	  from tb_emp
	  	 where emp_status = 'Y'
	  </select>
	  
	  
	  
	  
	  <select id="selectVacSearchListCount" resultType="_int">
	  	select count(*)
	  	  from (
	  	  	select
			    distinct
			       e.emp_no
			     , e.emp_name
			     , g.emp_grade
			     , g.gr_name
			     , e.emp_enroll_date
			     , (round(((trunc(months_between(sysdate,to_date(emp_enroll_date,'yy/mm/dd')) /12) *365)
			             + (trunc(mod(months_between(sysdate,to_date(emp_enroll_date,'yy/mm/dd')) /12,1) *12)*12)
			             + (trunc(mod(mod(months_between(sysdate,to_date(emp_enroll_date,'yy/mm/dd')) /12,1) *12,1) *(365/12))*1)) / 365, 1 )
			        ) as "work_year"
			  from tb_emp e
			  join tb_att a on (e.emp_no = a.emp_no)
			  join tb_grade g on (e.emp_grade = g.emp_grade)
			 where emp_status = 'Y'
			 <if test = "addSql == 'allWork'">
				
			</if>
			 <if test = "addSql == 'underOne'">
				and emp_enroll_date
					BETWEEN TO_DATE((select to_char(add_months(sysdate,-12),'yyyy-mm-dd') from dual), 'YYYY-MM-DD')
					AND sysdate
			</if>
			<if test = "addSql == 'oneToFive'">
				and emp_enroll_date
					BETWEEN TO_DATE((select to_char(add_months(sysdate,-60),'yyyy-mm-dd') from dual), 'YYYY-MM-DD')
					AND TO_DATE((select to_char(add_months(sysdate,-11),'yyyy-mm-dd') from dual), 'YYYY-MM-DD')
			</if>
			<if test = "addSql == 'overFive'">
				and emp_enroll_date
					BETWEEN TO_DATE((select to_char(add_months(sysdate,-480),'yyyy-mm-dd') from dual), 'YYYY-MM-DD')
					AND TO_DATE((select to_char(add_months(sysdate,-59),'yyyy-mm-dd') from dual), 'YYYY-MM-DD')
			</if>
			 and e.emp_name like '%' || #{sqlEmpName } || '%'
	  	  )
	  </select>
	  
	  
	  
	  
	  <select id="selectTodaySearchListCount" resultType="_int">
	  	select count(*)
	  	  from (
	  	  	select
			    distinct
			       e.emp_no
			     , e.emp_name
			     , g.gr_name
			     , nvl(a.att_in, '출근전') as "att_in"
			     , nvl(a.att_out, '퇴근전') as "att_out"
			     , a.att_date
			     , a.att_status
			     , a.att_plus_work
			  from tb_emp e
			  join tb_att a on (e.emp_no = a.emp_no)
			  join tb_grade g on (e.emp_grade = g.emp_grade)
			 where e.emp_status = 'Y'
			 and a.att_date = #{thisYear} || '-' || #{thisMonth} || '-' || #{thisDay}
			 <if test = 'addSqlGrade == "all"'>
				
			</if>
			 <if test = 'addSqlGrade == "admin"'>
				and e.emp_grade in ('C', 'A')
			</if>
			<if test = 'addSqlGrade == "trainer"'>
				and e.emp_grade = 'T'
			</if>
			<if test = 'addSqlStatus == "selectAll"'>
			
			</if>
			<if test = 'addSqlStatus == "O"'>
				and a.att_status='O'
			</if>
			<if test = 'addSqlStatus == "YVQZ"'>
				and a.att_status in ('Y', 'V', 'Q', 'Z' )
			</if>
			<if test = 'addSqlStatus == "P"'>
				and a.att_status='P'
			</if>
			<if test = 'addSqlStatus == "LX"'>
				and a.att_status in ('L','X' )
			</if>
			<if test = 'searchFlag  == "N"'>
			
			</if>
			<if test = 'searchFlag  == "Y"'>
				 and e.emp_name like '%' || #{sqlEmpName } || '%'
			</if>
	  	  )
	  </select>
	  
	  
	  
	  <select id="selectLevelEmployeeList" resultMap="employeeResult">
		select 
		       LPAD('　　　', 2*(LEVEL-1)) || emp_name emp_name
		     , g.gr_name emp_grade
		     , emp_no
		  from tb_grade g
		  join tb_emp e on (e.emp_grade = g.emp_grade)
		 where e.emp_status = 'Y'
		 start with gr_pr_grade is null
	   connect
	   		by nocycle prior g.emp_grade = gr_pr_grade 
	  </select>
	  
	  
	  <select id="checkEmpNoList" resultMap="employeeResult">
		select e.emp_no
			 , e.emp_name
			 , g.gr_name emp_grade
		  from tb_emp e
		  join tb_grade g on (e.emp_grade = g.emp_grade)
		 where e.emp_no in ${empNo}
	  </select>
	  
	  <update id="deleteEmployee">
	  	update tb_emp
	  	   set emp_status = 'N'
	  	 where emp_no in (${empNo})
	  </update>
	  
	  <select id="openVacModalSelectEmpName" resultMap="employeeResult">
		  select emp_name
		  	   , emp_no
		    from tb_emp
		    <if test="empNo != null">
		   		where emp_no in (${empNo})
			</if>
	  </select>
	  
	  <select id="selectByEmpNo" resultMap="employeeResult">
	  	select e.emp_no
	  		 , e.emp_name
	  		 , g.gr_name
	  	from tb_emp e
	  	join tb_grade g on(e.emp_grade = g.emp_grade)
	  	where e.emp_no = #{empNo}
	  </select>
	  
	  
  <update id="updateEmployee">
   	update 
   			tb_emp
	   set	emp_name = #{empName}
	 	  , emp_grade = #{empGrade}
		  , emp_gender = #{empGender}
		  , emp_phone = #{empPhone}
		  , emp_birth = #{empBirth}
	  where emp_no = #{empNo}
  </update>
  
  
  <update id="uploadProfileImg">
  
  </update>
  
  
  <!-- 프로필 수정_ 마이페이지용 -->
  	<update id="uploadProfileImg2">
		update
				tb_emp
		   set	emp_photo = #{empPhoto}
		 where	emp_no = #{empNo}
	</update>


</mapper>
